# Arethamatic Operations
printf "Enter First Number: "
read a
printf "Enter Second Nmunber: "
read b
c=`expr $a + $b`
     echo "The Sum Of First And Second Number is: $c"
c=`expr $a - $b`
     echo "The Deffirence Between First And Second Number is: $c"
c=`expr $a \* $b`
     echo "The Product Of First And Second Number is: $c"
c=`expr $a / $b`
     echo "The Devission Of First And Second Number is: $c"
c=`expr $a % $b`     
     echo "The Modulus Of First And Second Number is: $c"



# Logical Operators &=And !=Not-Equal ==Equal -gt=Greater-Then -lt=Less-Then -eq=Equal -nq=Not-Equal

#Script to find biggest number among 3 numbers

printf "Enter Three Numners: "
read a b c
if [ $a -gt $b ] && [ $a -gt $c ]
then
     echo "The First Number A is Big"
elif [ $b -gt $a ] && [ $b -gt $c ]
then
     echo "The Second Number B is Big"
else     
     echo "The Third Number c is Big"
fi


# File Options -e=File Or Directory Exist
#-e <filename> A file Exists
#-f <filename> A file is a Regular file (txt, img, docs…)
#-d <filename> A file is a Directory
#-r <filename> A file has Read permissions
#-w <filename> A file has Write permissions
#-x <filename> A file has Execute permissions
#-s <filename> A file contains more than 1 byte
#-O <filename> A file is owned by User
#-G <filename> A file is owned by Group
#<file1> -ef <file2> File1 is linked with File2
#<file1> -nt <file2> File1 is newer than File2
#<file1> -ot <file2> File1 is older than File2

printf "Enter Your File Name: "
read File
if [ -e $File ]
then 
     echo "The Entered File is Regular"
else      
     echo "The Entered File Does't Exist"
fi

printf "Enter Your File Name: "
read File
if [ -d $File ]
then
     echo "The Entered File is An Directory"
else 
     echo "The Entered File is Not An Directory"
fi

printf "Enter Your File Name: "
read File
if [ -r $File ]
then
     echo "The Entered File Had Read Permission"
else
     echo "The Entered File Not Have Read Permission"
fi

printf "Enter Your File Name: "
read File
if [ -W $File ]
then
     echo "The Entered File Had Write Permission"
else
     echo "The Entered File Not Have Write Permission"
fi

printf "Enter Your File Name: "
read File
if [ -x $File ]
then
     echo "The Entered File Had Exicute Permission"
echo
     echo "The Entered File Not Have Exicute Permission"
fi

printf "Enter Your File Name: "
read File
if [ -s $File ]
then
     echo "The Entered File Had Size More Then 1 Byte"
fi

printf "Enter Your File Name: "
read File
if [ -O $File ]
then
     echo "The Entered File is Owned By User"
fi

printf "Enter Your File Name: "
read File
if [ -G $File ]
then
     echo "The Entered File is Owned By Group"
fi


#Script for Even or Odd number

printf "Enter The Number: "
read a
if [ `expr $a % 2` -eq 0 ]
then
     echo "The Value You Entered is Even"
else
     echo "The Value You Enetered is Odd"
fi

#Script for copying file
printf "Enter Your Source File/Directory: "
read a
printf "Enter Your Destination File/Directory Path: "
read b
cp -rf $a $b
echo "The File/Directory Copied Successfully Go And Chech it"


#Script to verify given IP is valid or not

printf "\n Enter an IP address/Hostname: "
read ip
ping $ip -c1 > /dev/null
if [ $? -eq 0 ]
then
echo $ip is valid IP/Hostname
else
echo $ip is invalid IP/Hostname
fi

#Script to verify given User is valid or not

printf "\n Enter an Username: "
read uname
grep $uname /etc/passwd > /dev/null
if [ $? –eq 0 ]
then
echo $uname is valid Username
else
echo $uname is invalid Username
fi


#Script to verify eligible to vote & senior citizen

printf "\n Enter your age: "
read age
if [ $age -ge 18 ]
then
echo "You are eligible to vote."
if [ $age -ge 65 ]
then
echo "You are also eligible for senior citizen benefits."
else
echo "You are not eligible for senior citizen benefits."
fi
else
echo "You are not eligible to vote."
fi


#Script to find positive or negative or zero


printf "\n Enter a number: "
read num
if [ $num -gt 0 ]
then
echo "$num is Positive number. "
elif [ $num -lt 0 ]
then
echo "$num is Negative number. "
else
echo "$num is Zero."
fi


#Script to find the reverse of a number


printf "Enter a Number: "
read n
m=0
while [ $n -gt 0 ]
do
r=`expr $n % 10`
m=`expr $m \* 10 + $r`
n=`expr $n / 10`
done
echo Reverse Number: $m


#Script to find the number is palindrome

printf "Enter a Number: "
read n
temp=$n
rn=0
while [ $n -gt 0 ]
do
r=`expr $n % 10`
rn=`expr $rn \* 10 + $r`
n=`expr $n / 10`
done
if [ $temp -eq $rn ]
then
echo It is Palindrome
else
echo It is Not Palindrome
fi

